# Much of this is borrowed from node-sqlite3.

# Set language to "objective-c" and push to the "macosx" branch with
# "[publish binary]" in the commit message in order to build Mac OS X
# binaries
language: cpp

## don't re-build for tags so that [publish binary] is not re-run
## https://github.com/travis-ci/travis-ci/issues/1532
#branches:
#  except:
#    - /^[0-9]+[.][0-9]+[.][0-9]+/

env:
  matrix:
   - NODE_VERSION="0.8"
   - NODE_VERSION="0.10"
   - NODE_VERSION="0.11"
   - NODE_VERSION="0.12"
   - NODE_VERSION="iojs"
  global:
   - secure: "p/3rptxI8KJGhU1omrUu2WRClXhVwbRoWC3YfjaQr6rDMUMkmARc4tWT1UnL6e7bKAG2vKO9ko1d3meT6rHZL8ma/I5z9tvm3gefxLdIeV1I93JNX3nCLNkCDdIOcHEFibr1R8qsrcLqTaVoLMBhnNxFEvUFLbebD3ArFBy0zxY="

#matrix:
#  allow_failures:
#   # v8 API changed in 0.11, needs update
#   - env: NODE_VERSION="0.11"

before_install:
# check if tag exists and matches package.json
- scripts/validate_tag.sh
- echo $NODE_VERSION
- git clone https://github.com/creationix/nvm.git ./.nvm
- source ./.nvm/nvm.sh
- nvm install $NODE_VERSION
- nvm use $NODE_VERSION
- npm update -g npm
- npm config set spin=false
- npm config set loglevel=http
- node --version
- npm --version

install:
# put node-pre-gyp on path
- export PATH=./node_modules/.bin/:$PATH

before_script:
# get commit message
- export COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')

script:
- node --version
- npm --version
- npm install --build-from-source
- node-pre-gyp package testpackage
- npm test
# Normal case: tagged builds trigger 32-bit and 64-bit x86 builds
- if scripts/validate_tag.sh --check ; then npm install es6-shim && npm install request && npm run gh-publish && scripts/publish_x86.sh ; fi
# Workaround to trigger a manual x86 build
- if test "$TRAVIS_BRANCH" == "x86" -a  "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then npm install es6-shim && npm install request && npm run gh-publish && scripts/publish_x86.sh ; fi
# Trigger a manual macosx build by pushing to macosx branch (see above)
- if test "$TRAVIS_BRANCH" == "macosx" -a  "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then npm install es6-shim && npm install request && npm run gh-publish ; fi
